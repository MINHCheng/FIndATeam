{"ast":null,"code":"var _jsxFileName = \"/Users/minh/FIndATeam/team-up/front-end/src/components/LandingPage.js\";\nimport React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport gsap from 'gsap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LandingPage = () => {\n  // useEffect(() => {\n  //     const container = document.querySelector('.landing-page');\n  //     const circles = document.querySelectorAll('.circle');\n\n  //     // Get the container's dimensions and position\n  //     const containerRect = container.getBoundingClientRect();\n  //     const circleSize = 800; // Size of the circle\n\n  //     // Function to check if two circles overlap\n  //     const isOverlapping = (x1, y1, x2, y2, size) => {\n  //         const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n  //         return distance < size;\n  //     };\n\n  //     // Function to position circles without overlapping\n  //     const positionCircles = () => {\n  //         const positions = [];\n\n  //         circles.forEach(circle => {\n  //             let xPosition, yPosition, overlapping;\n\n  //             do {\n  //                 xPosition = Math.random() * (containerRect.width - circleSize);\n  //                 yPosition = Math.random() * (containerRect.height - circleSize);\n  //                 overlapping = positions.some(pos => isOverlapping(xPosition, yPosition, pos.x, pos.y, circleSize));\n  //             } while (overlapping);\n\n  //             positions.push({ x: xPosition, y: yPosition });\n\n  //             // Set the position using CSS left and top properties instead of transform properties\n  //             gsap.set(circle, {\n  //                 left: xPosition,\n  //                 top: yPosition,\n  //                 opacity: 0 // Start with 0 opacity\n  //             });\n\n  //             // Log the circle's position relative to the container\n  //             console.log('Circle position:', { left: xPosition, top: yPosition });\n  //         });\n\n  //         return positions;\n  //     };\n\n  //     const initialPositions = positionCircles();\n\n  //     // Timeline for flicker and reposition animation\n  //     const tl = gsap.timeline({ repeat: -1 });\n\n  //     // Opacity flicker animation\n  //     tl.to(circles, {\n  //         duration: 2,\n  //         opacity: 1,\n  //         ease: \"power1.in\"\n  //     })\n  //     .to(circles, {\n  //         duration: 2,\n  //         opacity: 0,\n  //         ease: \"power1.out\"\n  //     })\n  //     .to(circles, {\n  //         duration: 2,\n  //         opacity: 1,\n  //         ease: \"power1.in\"\n  //     })\n  //     .to(circles, {\n  //         duration: 2,\n  //         opacity: 0,\n  //         ease: \"power1.out\",\n  //         onComplete: () => {\n  //             // Reposition circles after 2 flickers without animation\n  //             const newPositions = initialPositions;\n  //             circles.forEach((circle, index) => {\n  //                 gsap.set(circle, {\n  //                     left: newPositions[index].x,\n  //                     top: newPositions[index].y\n  //                 });\n  //             });\n  //         }\n  //     });\n\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"landing-page background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: [\"Find \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#963D5A\"\n          },\n          children: \"Your\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 44\n        }, this), \" Team,\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: [\"Join the \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#963D5A'\n          },\n          children: \"Community.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","Container","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","LandingPage","children","fluid","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minh/FIndATeam/team-up/front-end/src/components/LandingPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport gsap from 'gsap';\n\nconst LandingPage = () => {\n\n    // useEffect(() => {\n    //     const container = document.querySelector('.landing-page');\n    //     const circles = document.querySelectorAll('.circle');\n\n    //     // Get the container's dimensions and position\n    //     const containerRect = container.getBoundingClientRect();\n    //     const circleSize = 800; // Size of the circle\n\n    //     // Function to check if two circles overlap\n    //     const isOverlapping = (x1, y1, x2, y2, size) => {\n    //         const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    //         return distance < size;\n    //     };\n\n    //     // Function to position circles without overlapping\n    //     const positionCircles = () => {\n    //         const positions = [];\n\n    //         circles.forEach(circle => {\n    //             let xPosition, yPosition, overlapping;\n\n    //             do {\n    //                 xPosition = Math.random() * (containerRect.width - circleSize);\n    //                 yPosition = Math.random() * (containerRect.height - circleSize);\n    //                 overlapping = positions.some(pos => isOverlapping(xPosition, yPosition, pos.x, pos.y, circleSize));\n    //             } while (overlapping);\n\n    //             positions.push({ x: xPosition, y: yPosition });\n\n    //             // Set the position using CSS left and top properties instead of transform properties\n    //             gsap.set(circle, {\n    //                 left: xPosition,\n    //                 top: yPosition,\n    //                 opacity: 0 // Start with 0 opacity\n    //             });\n\n    //             // Log the circle's position relative to the container\n    //             console.log('Circle position:', { left: xPosition, top: yPosition });\n    //         });\n\n    //         return positions;\n    //     };\n\n    //     const initialPositions = positionCircles();\n\n    //     // Timeline for flicker and reposition animation\n    //     const tl = gsap.timeline({ repeat: -1 });\n\n    //     // Opacity flicker animation\n    //     tl.to(circles, {\n    //         duration: 2,\n    //         opacity: 1,\n    //         ease: \"power1.in\"\n    //     })\n    //     .to(circles, {\n    //         duration: 2,\n    //         opacity: 0,\n    //         ease: \"power1.out\"\n    //     })\n    //     .to(circles, {\n    //         duration: 2,\n    //         opacity: 1,\n    //         ease: \"power1.in\"\n    //     })\n    //     .to(circles, {\n    //         duration: 2,\n    //         opacity: 0,\n    //         ease: \"power1.out\",\n    //         onComplete: () => {\n    //             // Reposition circles after 2 flickers without animation\n    //             const newPositions = initialPositions;\n    //             circles.forEach((circle, index) => {\n    //                 gsap.set(circle, {\n    //                     left: newPositions[index].x,\n    //                     top: newPositions[index].y\n    //                 });\n    //             });\n    //         }\n    //     });\n\n    // }, []);\n\n    return (\n        <>\n            <Container fluid className='landing-page background'>\n                <h1 className='Title'>Find <span style={{color:\"#963D5A\"}}>Your</span> Team,</h1>\n                <h1 className='Title'>Join the <span style={{color:'#963D5A'}}>Community.</span></h1>\n                {/* Add circles to the page */}\n                <div className=\"circle\"></div>\n                <div className=\"circle\"></div>\n                <div className=\"circle\"></div>\n            </Container>\n        </>\n    );\n};\n\nexport default LandingPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAEtB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA,CAACH,SAAS;MAACQ,KAAK;MAACC,SAAS,EAAC,yBAAyB;MAAAF,QAAA,gBAChDJ,OAAA;QAAIM,SAAS,EAAC,OAAO;QAAAF,QAAA,GAAC,OAAK,eAAAJ,OAAA;UAAMO,KAAK,EAAE;YAACC,KAAK,EAAC;UAAS,CAAE;UAAAJ,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,UAAM;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjFZ,OAAA;QAAIM,SAAS,EAAC,OAAO;QAAAF,QAAA,GAAC,WAAS,eAAAJ,OAAA;UAAMO,KAAK,EAAE;YAACC,KAAK,EAAC;UAAS,CAAE;UAAAJ,QAAA,EAAC;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErFZ,OAAA;QAAKM,SAAS,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BZ,OAAA;QAAKM,SAAS,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BZ,OAAA;QAAKM,SAAS,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC,gBACd,CAAC;AAEX,CAAC;AAACC,EAAA,GAhGIV,WAAW;AAkGjB,eAAeA,WAAW;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}