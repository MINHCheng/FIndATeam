{"ast":null,"code":"var _jsxFileName = \"/Users/minh/FIndATeam/team-up/front-end/src/components/LandingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport gsap from 'gsap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LandingPage = () => {\n  _s();\n  useEffect(() => {\n    const container = document.querySelector('.landing-page');\n    const circles = document.querySelectorAll('.circle');\n\n    // Get the container's dimensions\n    const containerRect = container.getBoundingClientRect();\n    console.log('Container dimensions:', containerRect);\n\n    // Set the position of each circle relative to the container and log their coordinates\n    circles.forEach(circle => {\n      const xPosition = Math.random() * (containerRect.width - 50); // Adjust for circle width\n      const yPosition = Math.random() * (containerRect.height - 50); // Adjust for circle height\n\n      // Set the position\n      gsap.set(circle, {\n        x: xPosition,\n        y: yPosition,\n        opacity: 1 // Set opacity directly to 1\n      });\n\n      // Log the circle's position\n      const circleRect = circle.getBoundingClientRect();\n      console.log('Circle position:', {\n        x: circleRect.x,\n        y: circleRect.y\n      });\n    });\n\n    // Test animation with basic properties\n    gsap.to(circles, {\n      duration: 2,\n      scale: 1.5,\n      // Simple scale animation to check visibility\n      repeat: -1,\n      yoyo: true,\n      stagger: 0.5,\n      ease: \"power1.inOut\"\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"landing-page background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: [\"Find \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#963D5A\"\n          },\n          children: \"Your\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 44\n        }, this), \" Team,\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Title\",\n        children: [\"Join the \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#963D5A'\n          },\n          children: \"Community.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(LandingPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LandingPage;\nexport default LandingPage;\nvar _c;\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"names":["React","useEffect","Container","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","LandingPage","_s","container","document","querySelector","circles","querySelectorAll","containerRect","getBoundingClientRect","console","log","forEach","circle","xPosition","Math","random","width","yPosition","height","set","x","y","opacity","circleRect","to","duration","scale","repeat","yoyo","stagger","ease","children","fluid","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minh/FIndATeam/team-up/front-end/src/components/LandingPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport gsap from 'gsap';\n\nconst LandingPage = () => {\n\n    useEffect(() => {\n        const container = document.querySelector('.landing-page');\n        const circles = document.querySelectorAll('.circle');\n\n        // Get the container's dimensions\n        const containerRect = container.getBoundingClientRect();\n        console.log('Container dimensions:', containerRect);\n\n        // Set the position of each circle relative to the container and log their coordinates\n        circles.forEach(circle => {\n            const xPosition = Math.random() * (containerRect.width - 50); // Adjust for circle width\n            const yPosition = Math.random() * (containerRect.height - 50); // Adjust for circle height\n\n            // Set the position\n            gsap.set(circle, {\n                x: xPosition,\n                y: yPosition,\n                opacity: 1 // Set opacity directly to 1\n            });\n\n            // Log the circle's position\n            const circleRect = circle.getBoundingClientRect();\n            console.log('Circle position:', { x: circleRect.x, y: circleRect.y });\n        });\n\n        // Test animation with basic properties\n        gsap.to(circles, {\n            duration: 2,\n            scale: 1.5, // Simple scale animation to check visibility\n            repeat: -1,\n            yoyo: true,\n            stagger: 0.5,\n            ease: \"power1.inOut\"\n        });\n    }, []);\n\n    return (\n        <>\n            <Container fluid className='landing-page background'>\n                <h1 className='Title'>Find <span style={{color:\"#963D5A\"}}>Your</span> Team,</h1>\n                <h1 className='Title'>Join the <span style={{color:'#963D5A'}}>Community.</span></h1>\n                {/* Add circles to the page */}\n                <div className=\"circle\"></div>\n                {/* <div className=\"circle\"></div>\n                <div className=\"circle\"></div> */}\n            </Container>\n        </>\n    );\n};\n\nexport default LandingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}